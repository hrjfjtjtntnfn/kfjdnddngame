name: phpMyAdmin + NRO + toan3 Setup with Cloudflared

on:
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 1Ô∏è‚É£ C√†i MySQL, PHP, phpMyAdmin, SSH
      - name: Install packages
        run: |
          sudo apt-get update -y
          sudo apt-get install -y mysql-server php php-mbstring php-zip php-gd php-json php-curl php-mysql unzip wget openssh-client

      # 2Ô∏è‚É£ Stop MySQL n·∫øu ƒëang ch·∫°y
      - name: Stop MySQL
        run: sudo systemctl stop mysql || true

      # 3Ô∏è‚É£ Start MySQL v·ªõi skip-grant-tables
      - name: Start MySQL in safe mode
        run: |
          sudo mkdir -p /var/run/mysqld
          sudo chown mysql:mysql /var/run/mysqld
          sudo mysqld_safe --skip-grant-tables --skip-networking &
          sleep 8

      # 4Ô∏è‚É£ Set root password
      - name: Set root password
        run: |
          mysql -uroot <<'SQL'
          FLUSH PRIVILEGES;
          ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'root';
          FLUSH PRIVILEGES;
          SQL
          echo "‚úÖ Root password set to 'root'"

      # 5Ô∏è‚É£ Restart MySQL b√¨nh th∆∞·ªùng
      - name: Restart MySQL
        run: |
          sudo pkill mysqld || true
          sudo systemctl start mysql
          sleep 5
          mysql -uroot -proot -e "SELECT VERSION();"
          echo "‚úÖ MySQL restarted"

      # 6Ô∏è‚É£ T·∫°o databases v√† import SQL
      - name: Import databases
        run: |
          mysql -uroot -proot -e "CREATE DATABASE IF NOT EXISTS nro_acc;"
          mysql -uroot -proot nro_acc < ./nro_acc.sql
          mysql -uroot -proot -e "CREATE DATABASE IF NOT EXISTS nro_data;"
          mysql -uroot -proot nro_data < ./nro_data.sql
          echo "‚úÖ Databases imported"

      # 7Ô∏è‚É£ T·∫°o admin user
      - name: Create admin user
        run: |
          mysql -uroot -proot -e "CREATE USER IF NOT EXISTS 'admin'@'%' IDENTIFIED BY '123456';"
          mysql -uroot -proot -e "GRANT ALL PRIVILEGES ON *.* TO 'admin'@'%' WITH GRANT OPTION; FLUSH PRIVILEGES;"
          echo "‚úÖ Admin user created"

      # 8Ô∏è‚É£ C√†i phpMyAdmin
      - name: Install phpMyAdmin
        run: |
          wget https://www.phpmyadmin.net/downloads/phpMyAdmin-latest-all-languages.zip -O pma.zip
          unzip -o pma.zip
          mv phpMyAdmin-* phpmyadmin
          sudo php -S 0.0.0.0:8080 -t phpmyadmin &

      # 9Ô∏è‚É£ C√†i cloudflared
      - name: Install cloudflared
        run: |
          wget -q -O /usr/local/bin/cloudflared \
            https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64
          sudo chmod +x /usr/local/bin/cloudflared
          cloudflared --version

      # üîü Ch·∫°y cloudflared tunnel ephemeral
      - name: Start cloudflared tunnel
        run: |
          nohup /usr/local/bin/cloudflared tunnel --url http://localhost:8080 --no-autoupdate > cloudflared.log 2>&1 &
          sleep 6
          if grep -Eo 'https?://[^ ]+trycloudflare.com' cloudflared.log | head -n1 > /tmp/pma_url; then
            echo "‚úÖ Public phpMyAdmin URL:"
            cat /tmp/pma_url
          else
            echo "‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y URL. Debug log:"
            tail -n +1 cloudflared.log
            exit 1
          fi

      # 1Ô∏è‚É£1Ô∏è‚É£ C√†i OpenJDK 17 v√† Ant 1.10.x
      - name: Install Java 17 and Ant
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-17-jdk unzip wget
          wget https://downloads.apache.org/ant/binaries/apache-ant-1.10.15-bin.zip -O ant.zip
          unzip -o ant.zip -d $HOME/
          echo "export PATH=\$HOME/apache-ant-1.10.15/bin:\$PATH" >> $GITHUB_ENV
          ant -version
          java -version

      # 1Ô∏è‚É£2Ô∏è‚É£ Download toan3.zip
      - name: Download toan3.zip
        run: wget -O toan3.zip https://github.com/hrjfjtjtntnfn/lode/releases/download/V97373/toan3.zip

      # 1Ô∏è‚É£3Ô∏è‚É£ List zip
      - name: List toan3.zip
        run: unzip -l toan3.zip

      # 1Ô∏è‚É£4Ô∏è‚É£ Unzip toan3.zip
      - name: Unzip toan3.zip
        run: unzip -o toan3.zip
        
      - name: Install tmate
        run: |
          sudo apt-get update
          sudo apt-get install -y tmate

      - name: Start tmate session
        run: |
          # Start tmate in foreground, will print SSH/web URL
          tmate -F
      # 1Ô∏è‚É£5Ô∏è‚É£ Run Ant
      - name: Run Ant project
        working-directory: toan3
        run: ant run
