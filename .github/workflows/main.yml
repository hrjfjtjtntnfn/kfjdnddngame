name: phpMyAdmin + NRO Setup with Cloudflared Tunnel

on:
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # 1Ô∏è‚É£ C√†i MySQL, PHP, phpMyAdmin, SSH
      - name: Install packages
        run: |
          sudo apt-get update -y
          sudo apt-get install -y mysql-server php php-mbstring php-zip php-gd php-json php-curl php-mysql unzip wget openssh-client

      # 2Ô∏è‚É£ D·ª´ng MySQL n·∫øu ƒëang ch·∫°y
      - name: Stop MySQL service
        run: |
          sudo systemctl stop mysql || true

      # 3Ô∏è‚É£ Kh·ªüi ƒë·ªông MySQL b·ªè qua ki·ªÉm tra user/password
      - name: Start MySQL with skip-grant-tables
        run: |
          sudo mkdir -p /var/run/mysqld
          sudo chown mysql:mysql /var/run/mysqld
          sudo mysqld_safe --skip-grant-tables --skip-networking &
          sleep 8

      # 4Ô∏è‚É£ Set root password
      - name: Set root password
        run: |
          mysql -uroot <<'SQL'
          FLUSH PRIVILEGES;
          ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'root';
          FLUSH PRIVILEGES;
          SQL
          echo "‚úÖ Root password set to 'root'"

      # 5Ô∏è‚É£ Restart MySQL b√¨nh th∆∞·ªùng
      - name: Restart MySQL service
        run: |
          sudo pkill mysqld || true
          sudo systemctl start mysql
          sleep 5
          mysql -uroot -proot -e "SELECT VERSION();"
          echo "‚úÖ MySQL restarted and accessible."

      # 6Ô∏è‚É£ T·∫°o database nro_acc v√† nro_data t·ª´ SQL file
      - name: Create databases and import SQL
        run: |
          # nro_acc
          mysql -uroot -proot -e "CREATE DATABASE IF NOT EXISTS nro_acc;"
          mysql -uroot -proot nro_acc < ./nro_acc.sql
          
          # nro_data
          mysql -uroot -proot -e "CREATE DATABASE IF NOT EXISTS nro_data;"
          mysql -uroot -proot nro_data < ./nro_data.sql
          
          echo "‚úÖ Databases nro_acc and nro_data created and imported."

      # 7Ô∏è‚É£ T·∫°o user admin (t√πy ch·ªçn)
      - name: Create admin user
        run: |
          mysql -uroot -proot -e "CREATE USER IF NOT EXISTS 'admin'@'%' IDENTIFIED BY '123456';"
          mysql -uroot -proot -e "GRANT ALL PRIVILEGES ON *.* TO 'admin'@'%' WITH GRANT OPTION; FLUSH PRIVILEGES;"
          echo "‚úÖ Admin user created."

      # 8Ô∏è‚É£ C√†i phpMyAdmin
      - name: Install phpMyAdmin
        run: |
          wget https://www.phpmyadmin.net/downloads/phpMyAdmin-latest-all-languages.zip -O pma.zip
          unzip pma.zip
          mv phpMyAdmin-* phpmyadmin
          sudo php -S 0.0.0.0:8080 -t phpmyadmin &

      # 9Ô∏è‚É£ C√†i cloudflared
      - name: Install cloudflared
        run: |
          echo "üì• Installing cloudflared..."
          wget -q -O /usr/local/bin/cloudflared \
            https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64
          sudo chmod +x /usr/local/bin/cloudflared
          cloudflared --version

      # üîü Ch·∫°y cloudflared tunnel ephemeral
      - name: Start cloudflared tunnel (ephemeral) and show public URL
        run: |
          echo "üåê Starting cloudflared tunnel to http://localhost:8080 ..."
          # ch·∫°y cloudflared ·ªü background, ghi log v√†o file ƒë·ªÉ d√≤ URL
          nohup /usr/local/bin/cloudflared tunnel --url http://localhost:8080 --no-autoupdate > cloudflared.log 2>&1 &
          # ƒë·ª£i m·ªôt ch√∫t ƒë·ªÉ cloudflared kh·ªüi t·∫°o v√† in ra URL
          sleep 6
          # th·ª≠ grep URL d·∫°ng trycloudflare.com (ephemeral public URL)
          if grep -Eo 'https?://[^ ]+trycloudflare.com' cloudflared.log | head -n1 > /tmp/pma_url; then
            echo "‚úÖ Public phpMyAdmin URL (ephemeral):"
            cat /tmp/pma_url
          else
            echo "‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y URL trong log. In ra n·ªôi dung cloudflared.log ƒë·ªÉ debug:"
            tail -n +1 cloudflared.log
            exit 1
          fi
          sleep 6000
